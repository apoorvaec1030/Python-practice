{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNLOltXXhxOnCBnUn7ii/NO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/apoorvaec1030/Python-practice/blob/main/Divide%20Array%20into%20equal%20parts\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Divide Array Into Equal Pairs**\n",
        "\n",
        "You are given an integer array nums consisting of 2 * n integers.\n",
        "\n",
        "You need to divide nums into n pairs such that:\n",
        "\n",
        "Each element belongs to exactly one pair.\n",
        "The elements present in a pair are equal.\n",
        "Return true if nums can be divided into n pairs, otherwise return false.\n",
        "\n",
        "\n",
        "\n",
        "Example 1:\n",
        "\n",
        "Input: nums = [3,2,3,2,2,2]\n",
        "Output: true"
      ],
      "metadata": {
        "id": "Dgh44GnG8jBS"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YLXfd5rD4tIY",
        "outputId": "7a4fdef9-7188-4936-d178-d31e50ef3df1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "dict_values([2, 1, 3, 1, 1, 1, 3, 1, 1])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "def divideArray(nums) -> bool:\n",
        "    dicti=dict()\n",
        "    for num in nums:\n",
        "        if num in dicti.keys():\n",
        "            dicti[num]+=1\n",
        "        else:\n",
        "            dicti[num]=1\n",
        "    print(dicti.values())\n",
        "    for i in dicti.values():\n",
        "        if i%2==0:\n",
        "            return False\n",
        "    return True\n",
        "\n",
        "\n",
        "nums=[15,1,4,8,12,11,4,10,4,10,10,15,20,7]\n",
        "divideArray(nums)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def divideArray(nums:list[int]):\n",
        "  freq=dict()\n",
        "\n",
        "  for num in nums:\n",
        "    freq[num]=freq.get(num,0)+1\n",
        "\n",
        "  return all(values%2==0 for values in freq.values())\n",
        "\n",
        "nums=[15,1,4,8,12,11,4,10,4,10,10,15,20,7]\n",
        "divideArray(nums)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7jZ2pZXn49UF",
        "outputId": "2f2c9973-99e9-4cda-8cfa-68cad97892c7"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0Z9Nf-6G9i9E"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}